apiVersion: v1
kind: Service
metadata:
  name: mysql-server
  namespace: zabbix
spec:
  ports:
    - port: 3306
  selector:
    app: mysql-server
  clusterIP: None

---

apiVersion: v1
kind: ConfigMap
metadata:
  name: mysql-config
  namespace: zabbix
  labels:
    app: mysql-config
data:
  default_auth: |
    [mysqld]
    default_authentication_plugin= mysql_native_password
    character-set-server= utf8
    collation-server= utf8_bin
    external-locking= ON
    delay-key-write= OFF

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: mysql-server
  namespace: zabbix
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mysql-server
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: mysql-server
    spec:
      #initContainers:
      #- name: init-wait
      #  image: alpine
      #  command: ["sh", "-c", "for i in $(seq 1 300); do nc -zvw1 fs-client 80 && exit 0 || sleep 3; done; exit 1"]
      containers:
      - image: mysql:8.0
        name: mysql-server
        env:
        - name: MYSQL_ROOT_PASSWORD
          value: root_pwd
        - name: MYSQL_USER
          value: zabbix
        - name: MYSQL_PASSWORD
          value: zabbix
        ports:
        - containerPort: 3306
          name: mysql
        volumeMounts:
        - name: mysql-persistent-storage
          mountPath: /var/lib/mysql
        - name: mysql-config-volume
          mountPath: /etc/mysql/conf.d/default_auth.cnf
          subPath: default_auth
      volumes:
      - name: mysql-persistent-storage
        glusterfs:
          endpoints: glusterfs-cluster
          path: volume-infra/zabbix/var/lib/mysql
          readOnly: false
      - name: mysql-config-volume
        configMap:
          name: mysql-config
      tolerations:
      - key: "node.kubernetes.io/unreachable"
        operator: "Exists"
        effect: "NoExecute"
        tolerationSeconds: 10
      - key: "node.kubernetes.io/not-ready"
        operator: "Exists"
        effect: "NoExecute"
        tolerationSeconds: 10
