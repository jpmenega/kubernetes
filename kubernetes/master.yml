- hosts: masters
  become: yes
  tasks:
    - name: initialize the cluster
      shell: kubeadm init --pod-network-cidr=10.244.0.0/16 --control-plane-endpoint "192.168.1.249:7443" --upload-certs >> cluster_initialized.txt
      args:
        chdir: $HOME
        creates: cluster_initialized.txt
      when: lb_primary == "yes"
      with_items: "{{ lb_primary | default([]) }}"

    - name: create .kube directory
      become: yes
      become_user: ubuntu
      file:
        path: $HOME/.kube
        state: directory
        mode: 0755
      when: lb_primary == "yes"
      with_items: "{{ lb_primary | default([]) }}"

    - name: copy admin.conf to user's kube config
      copy:
        src: /etc/kubernetes/admin.conf
        dest: /home/ubuntu/.kube/config
        remote_src: yes
        owner: ubuntu
      when: lb_primary == "yes"
      with_items: "{{ lb_primary | default([]) }}"

    - name: install Pod network
      become: yes
      become_user: ubuntu
      shell: kubectl apply -f https://raw.githubusercontent.com/jpmenega/kubernetes/main/kubernetes/kube-flannel.yaml >> pod_network_setup.txt
      args:
        chdir: $HOME
        creates: pod_network_setup.txt
      when: lb_primary == "yes"
      with_items: "{{ lb_primary | default([]) }}"

- hosts: ubuntu-masternode01
  become: yes
  gather_facts: false
  tasks:
    - name: get join command
      shell: kubeadm token create --print-join-command
      register: join_command_raw

    - name: get key
      shell: kubeadm certs certificate-key
      register: join_key_raw

    - name: upload new certificate and key
      shell: kubeadm init phase upload-certs --upload-certs --certificate-key {{ join_key_raw.stdout_lines[0] }}

    - name: set key
      set_fact:
        join_key: "{{ join_key_raw.stdout_lines[0] }}"

    - name: set join command
      set_fact:
        join_command: "{{ join_command_raw.stdout_lines[0] }} --control-plane --certificate-key {{ join_key_raw.stdout_lines[0] }}"

- hosts: masters
  become: yes
  tasks:
    - name: join cluster
      shell: "{{ hostvars['ubuntu-masternode01'].join_command }} >> node_joined.txt"
      args:
        chdir: $HOME
        creates: node_joined.txt
      when: lb_slave == "yes"
      with_items: "{{ lb_slave | default([]) }}"

    - name: create .kube directory
      become: yes
      become_user: ubuntu
      file:
        path: $HOME/.kube
        state: directory
        mode: 0755
      when: lb_slave == "yes"
      with_items: "{{ lb_slave | default([]) }}"

    - name: copy admin.conf to user's kube config
      copy:
        src: /etc/kubernetes/admin.conf
        dest: /home/ubuntu/.kube/config
        remote_src: yes
        owner: ubuntu
      when: lb_slave == "yes"
      with_items: "{{ lb_slave | default([]) }}"
    
    - name: taint NoSchedule cluster
      become: yes
      become_user: ubuntu
      shell: "kubectl taint nodes --all node-role.kubernetes.io/master- >> taint.txt"
      args:
        chdir: $HOME
        creates: taint.txt
      when: lb_primary == "yes" and taint == "yes"
      with_items: "{{ (lb_primary | default([])) and (taint | default([])) }}"
