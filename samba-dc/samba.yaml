#apiVersion: v1
#kind: Service
#metadata:
#  name: samba
#  namespace: samba-dc
#spec:
#  type: NodePort
#  ports:
#    - name: dns-tcp
#      port: 53
#      targetPort: 53
#      nodePort: 30053
#    - name: dns-udp
#      port: 53
#      targetPort: 53
#      nodePort: 30053
#      protocol: UDP
#    - name: netbios-ssn
#      port: 139
#      targetPort: 139
#      nodePort: 30139
#    - name: microsoft-ds
#      port: 445
#      targetPort: 445
#      nodePort: 30445
#    - name: netbios-ns
#      port: 137
#      targetPort: 137
#      nodePort: 30137
#      protocol: UDP
#    - name: netbios-dgm
#      port: 138
#      targetPort: 138
#      nodePort: 30138
#      protocol: UDP
#    - name: ldap
#      port: 389
#      targetPort: 389
#      nodePort: 30389
#    - name: ldap-s
#      port: 636
#      targetPort: 636
#      nodePort: 30636
#  selector:
#    app: samba

#---

apiVersion: "k8s.cni.cncf.io/v1"
kind: NetworkAttachmentDefinition
metadata:
  name: samba-ad-dc-static-ip-conf
  namespace: samba-dc

spec:
  config: '{
    "cniVersion": "0.3.1",
    "type": "ovs",
    "bridge": "br0",
    "ipam": {
      "type": "static"
    }
  }'

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: samba
  namespace: samba-dc
spec:
  replicas: 1
  selector:
    matchLabels:
      app: samba
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: samba
      annotations:
        k8s.v1.cni.cncf.io/networks: '[
          {
            "name": "samba-ad-dc-static-ip-conf",
            "ips": ["192.168.1.247/24"]
          }
        ]'
    spec:
      containers:
      - image: jpmenegatti/samba-dc:v10
        name: samba
        env:
        - name: DOMAIN
          value: "UZ.COM.BR"
        - name: DOMAINPASS
          value: "Uz2@21TI"
        - name: DNSFORWARDER
          value: "192.168.1.1"
        - name: HOSTIP
          value: "192.168.1.247"
        ports:
          - containerPort: 53
            name: dns-tcp
          - containerPort: 53
            name: dns-udp
            protocol: UDP
          - containerPort: 139
            name: netbios-ssn
          - containerPort: 445
            name: microsoft-ds
          - containerPort: 137
            name: netbios-ns
            protocol: UDP
          - containerPort: 138
            name: netbios-dgm
            protocol: UDP
          - containerPort: 389
            name: ldap
          - containerPort: 636
            name: ldap-s
        volumeMounts:
        - name: samba-data-persistent-storage
          mountPath: /var/lib/samba
        - name: samba-config-samba-persistent-storage
          mountPath: /etc/samba/external
        #- name: samba-volumes-persistent-storage
        #  mountPath: /mnt
        - name: localtime
          mountPath: /etc/localtime
        #args: [ '-s  volume1;/mnt;yes;no;yes;all;none', '-s volume2;/mnt;yes;no;no;jpmenega;admin' ]
        securityContext:
          privileged: true
      hostname: adc01
      dnsConfig:
        nameservers:
          - 192.168.1.247
          - 192.168.1.1
        searches:
          - uz.com.br
      volumes:
      - name: samba-data-persistent-storage
        hostPath:
          path: /mnt/samba/data
      - name: samba-config-samba-persistent-storage
        hostPath:
          path: /mnt/samba/config/samba
      #- name: samba-data-persistent-storage
      #  glusterfs:
      #    endpoints: glusterfs-cluster
      #    path: volume-samba/data
      #    readOnly: false
      #- name: samba-config-samba-persistent-storage
      #  glusterfs:
      #    endpoints: glusterfs-cluster
      #    path: volume-samba/config/samba
      #    readOnly: false
      #- name: samba-volumes-persistent-storage
      #  glusterfs:
      #    endpoints: glusterfs-cluster
      #    path: volume-samba/volumes
      #    readOnly: false
      - name: localtime
        hostPath:
          path: /etc/localtime
      tolerations:
      - key: "node.kubernetes.io/unreachable"
        operator: "Exists"
        effect: "NoExecute"
        tolerationSeconds: 20
      - key: "node.kubernetes.io/not-ready"
        operator: "Exists"
        effect: "NoExecute"
        tolerationSeconds: 20
